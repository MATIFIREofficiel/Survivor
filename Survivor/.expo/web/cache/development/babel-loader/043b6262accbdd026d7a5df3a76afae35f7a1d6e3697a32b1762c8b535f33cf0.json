{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (email === 'entreprise@example.com' && password === 'motdepasse') {\n      alert('Connexion réussie !');\n    } else {\n      alert('Identifiants incorrects.');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Entreprise XYZ\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Adresse e-mail\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Mot de passe\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Se connecter\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 30\n  },\n  input: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'blue',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","alert","style","styles","container","children","logo","input","placeholder","onChangeText","text","value","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","color","marginBottom","width","borderRadius","padding","textAlign"],"sources":["/home/matthias/Bureau/TEK3/Survivor/Survivor/Pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n} from 'react-native';\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Ajoutez ici la logique de connexion à votre entreprise\n    // Vous pouvez utiliser une API ou une autre méthode d'authentification\n\n    // Exemple simplifié : Vérification d'un email et d'un mot de passe fictifs\n    if (email === 'entreprise@example.com' && password === 'motdepasse') {\n      alert('Connexion réussie !');\n    } else {\n      alert('Identifiants incorrects.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.logo}>Entreprise XYZ</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Adresse e-mail\"\n        onChangeText={(text) => setEmail(text)}\n        value={email}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Mot de passe\"\n        secureTextEntry\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        <Text style={styles.buttonText}>Se connecter</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue', // Couleur prédominante bleue\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white', // Couleur du texte en blanc\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    backgroundColor: 'white', // Couleur de fond blanche pour les champs de saisie\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor: 'white', // Couleur de fond blanche pour le bouton\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'blue', // Couleur du texte en bleu\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}