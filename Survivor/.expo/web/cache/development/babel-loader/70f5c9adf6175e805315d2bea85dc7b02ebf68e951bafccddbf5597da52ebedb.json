{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var handleLogin = function handleLogin() {\n    setIsLoading(true);\n    setTimeout(function () {\n      if (email === 'entreprise@example.com' && password === 'motdepasse') {\n        setIsLoading(false);\n        navigation.navigate('Accueil');\n      } else {\n        setIsLoading(false);\n        alert('Identifiants incorrects.');\n      }\n    }, 2000);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.logo,\n      children: \"Entreprise XYZ\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Adresse e-mail\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Mot de passe\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), isLoading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"blue\"\n    }) : _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Se connecter\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 30\n  },\n  input: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'blue',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","ActivityIndicator","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","handleLogin","setTimeout","navigate","alert","style","styles","container","children","logo","input","placeholder","onChangeText","text","value","secureTextEntry","size","color","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","width","borderRadius","padding","textAlign"],"sources":["/home/matthias/Bureau/TEK3/Survivor/Survivor/Pages/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ActivityIndicator,\n  StyleSheet,\n} from 'react-native';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = () => {\n    // Simulez une requête d'authentification en attente\n    setIsLoading(true);\n    setTimeout(() => {\n      // Replacez cette logique par une authentification réelle\n      if (email === 'entreprise@example.com' && password === 'motdepasse') {\n        setIsLoading(false);\n        navigation.navigate('Accueil'); // Redirigez vers l'écran d'accueil après la connexion\n      } else {\n        setIsLoading(false);\n        alert('Identifiants incorrects.');\n      }\n    }, 2000); // Simulation d'une requête en attente pendant 2 secondes\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.logo}>Entreprise XYZ</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Adresse e-mail\"\n        onChangeText={(text) => setEmail(text)}\n        value={email}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Mot de passe\"\n        secureTextEntry\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n      />\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color=\"blue\" />\n      ) : (\n        <TouchableOpacity style={styles.button} onPress={handleLogin}>\n          <Text style={styles.buttonText}>Se connecter</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue',\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 30,\n  },\n  input: {\n    width: '80%',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'blue',\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}